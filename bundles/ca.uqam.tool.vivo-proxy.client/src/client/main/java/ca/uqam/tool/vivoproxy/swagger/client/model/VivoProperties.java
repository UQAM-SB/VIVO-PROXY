/*
 * VIVO Proxy API
 * Proxy API for VIVO Data Manipulation
 *
 * OpenAPI spec version: 1.0.0 - 2021-10-23
 * Contact: vivo@uqam.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ca.uqam.tool.vivoproxy.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Required properties for vivo-proxy to connect to a VIVO instance
 */
@Schema(description = "Required properties for vivo-proxy to connect to a VIVO instance")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-01-19T16:41:07.898-05:00[America/New_York]")
public class VivoProperties {
  @SerializedName("vivo-URL")
  private String vivoURL = null;

  @SerializedName("sparql-query-URL")
  private String sparqlQueryURL = null;

  @SerializedName("sparql-update-URL")
  private String sparqlUpdateURL = null;

  @SerializedName("sparql-endPoint-type")
  private String sparqlEndPointType = "vivo";

  @SerializedName("VIVO-admin-login")
  private String viVOAdminLogin = null;

  @SerializedName("VIVO-admin-password")
  private String viVOAdminPassword = null;

  public VivoProperties vivoURL(String vivoURL) {
    this.vivoURL = vivoURL;
    return this;
  }

   /**
   * Remote VIVO URL
   * @return vivoURL
  **/
  @Schema(example = "http://vivo-uqam.ca-central-1.elasticbeanstalk.com/#", required = true, description = "Remote VIVO URL")
  public String getVivoURL() {
    return vivoURL;
  }

  public void setVivoURL(String vivoURL) {
    this.vivoURL = vivoURL;
  }

  public VivoProperties sparqlQueryURL(String sparqlQueryURL) {
    this.sparqlQueryURL = sparqlQueryURL;
    return this;
  }

   /**
   * Remote SPARQL endPoint for query
   * @return sparqlQueryURL
  **/
  @Schema(example = "https://vivo-demo-db.cluster-c2o1sdzzfasi.ca-central-1.neptune.amazonaws.com:8182/sparql", required = true, description = "Remote SPARQL endPoint for query")
  public String getSparqlQueryURL() {
    return sparqlQueryURL;
  }

  public void setSparqlQueryURL(String sparqlQueryURL) {
    this.sparqlQueryURL = sparqlQueryURL;
  }

  public VivoProperties sparqlUpdateURL(String sparqlUpdateURL) {
    this.sparqlUpdateURL = sparqlUpdateURL;
    return this;
  }

   /**
   * Remote SPARQL endPoint for update
   * @return sparqlUpdateURL
  **/
  @Schema(example = "https://vivo-demo-db.cluster-c2o1sdzzfasi.ca-central-1.neptune.amazonaws.com:8182/sparql", required = true, description = "Remote SPARQL endPoint for update")
  public String getSparqlUpdateURL() {
    return sparqlUpdateURL;
  }

  public void setSparqlUpdateURL(String sparqlUpdateURL) {
    this.sparqlUpdateURL = sparqlUpdateURL;
  }

  public VivoProperties sparqlEndPointType(String sparqlEndPointType) {
    this.sparqlEndPointType = sparqlEndPointType;
    return this;
  }

   /**
   * Indicates the SPARQL endPoint type {neptune|vivo}
   * @return sparqlEndPointType
  **/
  @Schema(required = true, description = "Indicates the SPARQL endPoint type {neptune|vivo}")
  public String getSparqlEndPointType() {
    return sparqlEndPointType;
  }

  public void setSparqlEndPointType(String sparqlEndPointType) {
    this.sparqlEndPointType = sparqlEndPointType;
  }

  public VivoProperties viVOAdminLogin(String viVOAdminLogin) {
    this.viVOAdminLogin = viVOAdminLogin;
    return this;
  }

   /**
   * Login name for VIVO admin (root)
   * @return viVOAdminLogin
  **/
  @Schema(example = "vivo@uqam.ca", required = true, description = "Login name for VIVO admin (root)")
  public String getViVOAdminLogin() {
    return viVOAdminLogin;
  }

  public void setViVOAdminLogin(String viVOAdminLogin) {
    this.viVOAdminLogin = viVOAdminLogin;
  }

  public VivoProperties viVOAdminPassword(String viVOAdminPassword) {
    this.viVOAdminPassword = viVOAdminPassword;
    return this;
  }

   /**
   * Password used by VIVO admin (root)
   * @return viVOAdminPassword
  **/
  @Schema(example = "Vivo1234.", required = true, description = "Password used by VIVO admin (root)")
  public String getViVOAdminPassword() {
    return viVOAdminPassword;
  }

  public void setViVOAdminPassword(String viVOAdminPassword) {
    this.viVOAdminPassword = viVOAdminPassword;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VivoProperties vivoProperties = (VivoProperties) o;
    return Objects.equals(this.vivoURL, vivoProperties.vivoURL) &&
        Objects.equals(this.sparqlQueryURL, vivoProperties.sparqlQueryURL) &&
        Objects.equals(this.sparqlUpdateURL, vivoProperties.sparqlUpdateURL) &&
        Objects.equals(this.sparqlEndPointType, vivoProperties.sparqlEndPointType) &&
        Objects.equals(this.viVOAdminLogin, vivoProperties.viVOAdminLogin) &&
        Objects.equals(this.viVOAdminPassword, vivoProperties.viVOAdminPassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(vivoURL, sparqlQueryURL, sparqlUpdateURL, sparqlEndPointType, viVOAdminLogin, viVOAdminPassword);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VivoProperties {\n");
    
    sb.append("    vivoURL: ").append(toIndentedString(vivoURL)).append("\n");
    sb.append("    sparqlQueryURL: ").append(toIndentedString(sparqlQueryURL)).append("\n");
    sb.append("    sparqlUpdateURL: ").append(toIndentedString(sparqlUpdateURL)).append("\n");
    sb.append("    sparqlEndPointType: ").append(toIndentedString(sparqlEndPointType)).append("\n");
    sb.append("    viVOAdminLogin: ").append(toIndentedString(viVOAdminLogin)).append("\n");
    sb.append("    viVOAdminPassword: ").append(toIndentedString(viVOAdminPassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
