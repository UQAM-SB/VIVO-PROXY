package ca.uqam.tool.vivoproxy.swagger.server.api;
/*
 * VIVO Proxy API
 * Proxy API for VIVO Data Manipulation
 *
 * OpenAPI spec version: 1.0.0
 * Contact: vivo@uqam.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


import ca.uqam.tool.vivoproxy.swagger.api.NotFoundException;
import ca.uqam.tool.vivoproxy.swagger.api.PersonApi;
import ca.uqam.tool.vivoproxy.swagger.api.PersonApiService;
import ca.uqam.tool.vivoproxy.swagger.api.impl.PersonApiServiceImpl;
import ca.uqam.tool.vivoproxy.swagger.api.impl.VivoApiServiceImpl;
import ca.uqam.tool.vivoproxy.swagger.model.Person;
import ca.uqam.tool.vivoproxy.swagger.model.PositionOfPerson;
import ca.uqam.tool.vivoproxy.swagger.server.api.sample.SampleValues;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;

import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.formats.TurtleDocumentFormat;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyManager;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * API tests for PersonApi
 */

public class PersonApiTest {

    private static final String IRI_CORE_FACULTY_POSITION = "http://vivoweb.org/ontology/core#FacultyPosition";
    private final PersonApi api = new PersonApi(null);
    public static void main(String[]  args) throws IOException, OWLOntologyCreationException, OWLOntologyStorageException, NotFoundException {
        PersonApiTest apiTest = new PersonApiTest();
        if (true) apiTest.createPersonTest();
        else if (true) apiTest.createPositionForTest();
        System.out.println("Done PersonApiTest !");

    }

    
    /**
     * Create a person in VIVO 
     *
     * This can only be done by the logged in person.
     * @throws NotFoundException 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    
    public void createPersonTest() throws NotFoundException  {
        Person person = new Person();
        person.firstName("Michel");
        person.middleName("Joseph");
        person.lastName("HÃ©on 2");
        person.setPersonType(SampleValues.IRI_CORE_PERSON_TYPE);
        Response result = api.createPerson(person, null);
        System.out.println(result);
        System.out.println("Done!");
    }
    
    /**
     * Create organizational position for
     * @throws NotFoundException 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    
 /*
  *      personIRI:
        type: "string"
        example: "http://localhost:8080/vivo/individual/n733"
      organisationIRI:
        type: "string"
        example: "http://localhost:8080/vivo/individual/n4762"
      organisationLabel:
        type: "string"
        example: "Harvard University"
      positionTitleLabel:
        type: "string"
        example: "Professor"
      positionTypeIRI:
        type: "string"
        example: "http://vivoweb.org/ontology/core#FacultyPosition"
      vivoOrganisationTypeIRI:
        type: "string"
        example: "http://vivoweb.org/ontology/core#University"
      startField_year:
        type: "string"
      endField_year:
        type: "string"
  */
    public void createPositionForTest() throws NotFoundException  {
        String indvRoot = "http://localhost:8080/vivo/individual/";
        SecurityContext securityContext = null;
        PositionOfPerson body = new PositionOfPerson();
        body.setOrganisationLabel(SampleValues.LABEL_UNIVERSITE_DU_QUEBEC_A_MONTREAL);
        body.setOrganisationIRI(indvRoot+"n7966");
        body.setPersonIRI(indvRoot+"n6135");
        body.setPositionTypeIRI(IRI_CORE_FACULTY_POSITION);
        body.setVivoOrganisationTypeIRI(SampleValues.IRI_CORE_ORGANISATION_TYPE);
        body.startFieldYear("2017");
        body.endFieldYear("2020");
        body.positionTitleLabel(SampleValues.LABEL_POSITION_TITLLE);
        api.createPositionFor(body, securityContext );
    }
}
