/*
 * VIVO Proxy API
 * Proxy API for VIVO Data Manipulation
 *
 * OpenAPI spec version: 1.0.0
 * Contact: vivo@uqam.ca
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ca.uqam.tool.vivoproxy.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * CommandResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-07-30T07:13:23.455-04:00[America/New_York]")
public class CommandResponse {
  @SerializedName("IRI")
  private String IRI = null;

  @SerializedName("VIVO-Message")
  private String viVOMessage = null;

  @SerializedName("usefull-Message")
  private String usefullMessage = null;

  public CommandResponse IRI(String IRI) {
    this.IRI = IRI;
    return this;
  }

   /**
   * The subject IRI of the created statement
   * @return IRI
  **/
  @Schema(example = "http://localhost:8080/vivo/individual/n774", description = "The subject IRI of the created statement")
  public String getIRI() {
    return IRI;
  }

  public void setIRI(String IRI) {
    this.IRI = IRI;
  }

  public CommandResponse viVOMessage(String viVOMessage) {
    this.viVOMessage = viVOMessage;
    return this;
  }

   /**
   * The transaction message transmitted by the VIVO server
   * @return viVOMessage
  **/
  @Schema(example = "<H1>200 SPARQL update accepted.</H1>", description = "The transaction message transmitted by the VIVO server")
  public String getViVOMessage() {
    return viVOMessage;
  }

  public void setViVOMessage(String viVOMessage) {
    this.viVOMessage = viVOMessage;
  }

  public CommandResponse usefullMessage(String usefullMessage) {
    this.usefullMessage = usefullMessage;
    return this;
  }

   /**
   * General purpose message (Optional)
   * @return usefullMessage
  **/
  @Schema(example = "Transation done!", description = "General purpose message (Optional)")
  public String getUsefullMessage() {
    return usefullMessage;
  }

  public void setUsefullMessage(String usefullMessage) {
    this.usefullMessage = usefullMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommandResponse commandResponse = (CommandResponse) o;
    return Objects.equals(this.IRI, commandResponse.IRI) &&
        Objects.equals(this.viVOMessage, commandResponse.viVOMessage) &&
        Objects.equals(this.usefullMessage, commandResponse.usefullMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(IRI, viVOMessage, usefullMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommandResponse {\n");
    
    sb.append("    IRI: ").append(toIndentedString(IRI)).append("\n");
    sb.append("    viVOMessage: ").append(toIndentedString(viVOMessage)).append("\n");
    sb.append("    usefullMessage: ").append(toIndentedString(usefullMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
