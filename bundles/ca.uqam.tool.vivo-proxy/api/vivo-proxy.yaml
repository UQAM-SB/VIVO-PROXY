openapi: 3.0.2
info:
  title: VIVO Proxy API
  description: Proxy API for VIVO Data Manipulation
  termsOfService: http://swagger.io/terms/
  contact:
    name: Michel Héon PhD
    email: vivo@uqam.ca
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE2.0.html
  version: 1.0.0 - 2021-10-23
externalDocs:
  description: Find out more about VIVO
  url: https://duraspace.org/vivo/
servers:
- url: http://localhost:9090/vivoproxy
security:
- basicAuth: []
tags:
- name: person
  description: Operations about a Person in VIVO
  externalDocs:
    description: Local VIVO Instance
    url: http://localhost:8080/vivo
- name: vivo
  description: Operations about generic individual in VIVO
- name: organization
  description: Operations about Organization in VIVO
paths:
  /concept/withIRI:
    post:
      tags:
      - concept
      summary: Create a concept(skos:Concept) in VIVO
      description: This can only be done by the logged in person.
      operationId: createConcept
      requestBody:
        description: Created skos concept
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/concept'
            example: {
                        "IRI": "http://purl.org/uqam.ca/vocabulary/expertise#semanticweb",
                        "labels": [
                            {
                              "label": "semantic web",
                              "language": "en-US"
                            },
                           {
                            "label": "web sémantique",
                            "language": "fr-CA"
                          }
                        ]
                      }  
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /concept/createIRI:
    post:
      tags:
      - concept
      summary: Create a concept(skos:Concept) in VIVO (IRI generated by VIVO)
      description: This can only be done by the logged in person.
      operationId: createConceptWithNewIRI
      requestBody:
        description: Created skos concept
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/concept'
            example: {
                        "labels": [
                            {
                              "label": "semantic web",
                              "language": "en-US"
                            },
                           {
                            "label": "web sémantique",
                            "language": "fr-CA"
                          }
                        ]
                      }  
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /document:
    post:
      tags:
      - document
      summary: Create a document in VIVO
      description: This can only be done by the logged in person.
      operationId: createDocument
      requestBody:
        description: Created a document
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/document'
            example: {
                    "docTypeIRI": "http://vivoweb.org/ontology/core#ConferencePaper",
                    "title": "Les écrans, des machines de vision"
                  }
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /document/addAuthorFor:
    put:
      tags:
      - document
      summary: Associate a document to an Author
      operationId: documentAddAuthorFor
      requestBody:
        description: Author that need to be add to a document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorOfADocument'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body

  /person:
    post:
      tags:
      - person
      summary: Create a person in VIVO
      description: This can only be done by the logged in person.
      operationId: createPerson
      requestBody:
        description: Created person object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /person/createWithEmailHasKey:
    post:
      tags:
      - person
      summary: Create a user in VIVO using the eMail address as an IRI key
      description: This can only be done by the logged in person.
      operationId: createPersonWithEmail
      requestBody:
        description: Created person object with email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personWithOfficeInfo'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /person/createWithList:
    post:
      tags:
      - person
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      deprecated: true
      requestBody:
        description: List of user object
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/person'
              example: [
                  {
                    "personType": "http://vivoweb.org/ontology/core#FacultyMember",
                    "firstName": "Peters",
                    "lastName": "Jasper",
                    "middleName": "I"
                  },
                  {
                    "personType": "http://vivoweb.org/ontology/core#EmeritusProfessor",
                    "firstName": "Ben",
                    "lastName": "Jonson",
                  }
                ]
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
        405:
          description: Validation exception
          content: {}
        default:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /person/addPositionFor:
    put:
      tags:
      - person
      summary: Add an organizational position for
      operationId: personAddOrganisationalPositionTo
      requestBody:
        description: Person that need to be in an organization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/positionOfPerson'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /person/addHasResearchArea:
    put:
      tags:
      - person
      summary: Create 'has Research Area' for a person
      operationId: personHasAddResearchArea
      requestBody:
        description: Research Area of a person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceToResource'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /person/addResearchAreaOf:
    put:
      tags:
      - person
      summary: Create a 'Research Area of' a person
      operationId: personAddResearchAreaOf
      requestBody:
        description: Research Area of a person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceToResource'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /person/addDocument:
    put:
      tags:
      - person
      summary: Associate a Document to a Person
      operationId: personAddDocument
      requestBody:
        description: Author of document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/authorOfADocument'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            text/turtle:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /indv/byLabel:
    get:
      tags:
      - Individual
      summary: Get an individual IRI by label (rdfs:label)
      operationId: getIndvByLabel
      parameters:
      - name: Label
        in: query
        description: Strict string used to obtain information from a VIVO individual
        required: true
        schema:
          type: string
          example: "Andrew Bogard"
      responses:
        200:
          description: successful operation
          content:
            text/turtle:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/vivo'
        400:
          description: Invalid label supplied
          content: {}
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        404:
          description: labelvivo not found
          content: {}
      security:
      - basicAuth: []
  /indv/byIri:
    get:
      tags:
      - Individual
      summary: Get an individual by IRI
      operationId: getIndvByIRI
      parameters:
      - name: IRI
        in: query
        description: Used to obtain information from a VIVO individual by the IRI
        required: true
        schema:
          type: string
          example: http://localhost:8080/vivo/individual/n5471
      responses:
        200:
          description: successful operation
          content:
            text/turtle:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/vivo'
        400:
          description: Invalid IRI supplied
          content: {}
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        404:
          description: vivo not found
          content: {}
      security:
      - basicAuth: []
  /indv/addImage:
    put:
      tags:
      - Individual
      summary: Associate an image to an individual
      operationId: indvAddImage
      requestBody:
        description: image associated to an individual
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/image'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /indv/addType:
    put:
      tags:
      - Individual
      summary: Associate a type to an individual
      operationId: indvAddType
      requestBody:
        description: Adding type associated to an existing individual
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/individualType'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /indv/addStatement:
    put:
      tags:
      - Individual
      summary: Adding statement
      operationId: indvAddStatement
      requestBody:
        description: Adding a triple to the graph
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/statement'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /indv/addLabel:
    put:
      tags:
      - Individual
      summary: Add a label to an individual
      operationId: indvAddLabel
      requestBody:
        description: Linguistic labels to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/linguisticLabel'
      parameters:
        - name: IRI
          in: query
          description: The IRI of the individual from which a label is added
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /organization:
    post:
      tags:
      - organization
      summary: Create an organization in VIVO
      description: This can only be done by the logged in VIVO.
      operationId: createOrganization
      requestBody:
        description: Created organization object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
            example: {
                      "organizationType": "http://vivoweb.org/ontology/core#University",
                      "names": [
                        {
                          "label": "Université du Québec à Montréal",
                          "language": "fr-CA"
                        },
                        {
                          "label": "University Of Québec in Montreal",
                          "language": "en-US"
                        }
                      ]
                    }
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
components:
  schemas:
    positionOfPerson:
      required:
        - personIRI
        - organisationIRI
        - positionTitleLabel
        - positionTypeIRI
#        - vivoOrganisationTypeIRI
      type: object
      properties:
        personIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n774
        organisationIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n4762
        positionTitleLabel:
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Professeur",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Professor",
                      "language": "en-US"
                    }
                  ]
        positionTypeIRI:
          type: string
          example: http://vivoweb.org/ontology/core#Position
          default: http://vivoweb.org/ontology/core#Position
#        vivoOrganisationTypeIRI:
#          type: string
#          example: http://xmlns.com/foaf/0.1/Organization
#          default: http://xmlns.com/foaf/0.1/Organization
        startField_year:
          type: string
        endField_year:
          type: string
      xml:
        name: personMemberOf
    concept:
      required:
        - labels
      type: object
      properties:
        IRI:
          type: string
          example: http://purl.org/uqam.ca/vocabulary/expertise#semanticweb
          description: Leave it blank to automatically generate a new IRI
        labels:
          type: array
          items:
            $ref: '#/components/schemas/linguisticLabel'
    image:
      required:
        - individualIRI
        - imageURL
        - width
        - height
      type: object
      properties:
        individualIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n7440
        imageURL:
          type: string
          example: /home/user/photo/picture.jpg
        orig_X:
          type: integer
          default: 0
        orig_Y:
          type: integer
          default: 0
        width:
          type: integer
          default: 270
        height:
          type: integer
          default: 270
    document:
      required:
        - docTypeIRI
        - title
      type: object
      properties:
        docTypeIRI:
          type: string
          example: http://vivoweb.org/ontology/core#ConferencePaper
        title:
          type: string
          example: Les écrans, des machines de vision
    linguisticLabel:
      required:
        - label
        - language
      type: object
      properties:
        label:
          type: string
          example: semantic web
        language:
          type: string
          example: fr-CA
          default: en-US
          description: Using the 'Language Tags and Locale Identifiers for the World Wide Web' defined at https://www.w3.org/TR/ltli/ for this field
    authorOfADocument:
      required:
        - documentIRI
        - personIRI
 #       - personType
#        - firstName
#        - lastName
      type: object
      properties:
        documentIRI:
          nullable: false
          type: string
          example: http://localhost:8080/vivo/individual/n7440
        personIRI:
          nullable: false
          type: string
          example: http://localhost:8080/vivo/individual/n32
#        personType:
#          nullable: false
#          type: string
#          example: http://vivoweb.org/ontology/core#FacultyMember
#        firstName:
#          nullable: false
#          type: string
#          example: Peters
#        lastName:
#          nullable: false
#          type: string
#          example: Jasper
#        middleName:
#          nullable: true
#          type: string
#          example: I
      xml:
        name: author
    person:
      required:
        - personType
        - firstName
        - lastName
      type: object
      properties:
        personType:
          nullable: false
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
        firstName:
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Peter",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Peter",
                      "language": "en-US"
                    }
                  ]
        lastName:
          nullable: false
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Jasper",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Jasper",
                      "language": "en-US"
                    }
                  ]
      xml:
        name: person
    personWithOfficeInfo:
      required:
        - personType
        - firstName
        - lastName
        - title
        - eMail
      type: object
      properties:
        personType:
          nullable: false
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
        firstName:
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Peter",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Peter",
                      "language": "en-US"
                    }
                  ]
        lastName:
          nullable: false
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Jasper",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Jasper",
                      "language": "en-US"
                    }
                  ]
        title: 
          nullable: false
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Professeur",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Professor",
                      "language": "en-US"
                    }
                  ]
        eMail:
          type: string
          description: principal email that is used has key
          example: jasper.peter@example.org
        secondaryMails:
          description: Other usefull emails
          type: array
          items:
            type: string
          example: [ 
            jaspers2.peter@example.org , jaspers3.peter@example.org]
        telephone:
          type: string
          description: telephone number
          example: +1 (514) 987-3000 ext. 0000
        address:
          items:
            $ref: '#/components/schemas/addressSchema'
        organization-unit:
          items:
            $ref: '#/components/schemas/linguisticLabel'
          example: [
                    {
                      "label": "Département d'informatique",
                      "language": "fr-CA"
                    },
                    {
                      "label": "Computer Science",
                      "language": "en-US"
                    }
                  ]
        organization-name:
          items:
            $ref: '#/components/schemas/linguisticLabel'
          default: [
                    {
                      "label": "Université du Québec à Montréal",
                      "language": "fr-CA"
                    },
                    {
                      "label": "University of Quebec at Montreal",
                      "language": "en-US"
                    }
                  ]
          example: [
                    {
                      "label": "Université du Québec à Montréal",
                      "language": "fr-CA"
                    },
                    {
                      "label": "University of Quebec at Montreal",
                      "language": "en-US"
                    }
                  ]
      xml:
        name: person
    addressSchema:
      required:
        - streetAddress
        - locality
        - region
        - country
        - postalCode
      type: object
      properties:
        streetAddress:
          type: string
          example: "Faculté des sciences; Case postale 8888, succ. Centre-ville"
          description: "The ';' delimiter that separates the address header elements will be replaced by a line break in the display"
        locality:
          type: string
          example: "Montréal"
        region:
          type: string
          example: "Québec"
        country:
          type: string
          example: "Canada"
        postalCode:
          type: string
          example: H3C-3P8
      xml:
        name: address
    individualType:
      required:
        - vivoTypeIRI
        - individualIRI
      type: object
      properties:
        individualIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n6870
        vivoTypeIRI:
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
      xml:
        name: individualType
    statement:
      required:
        - subject
        - predicate
        - object
      type: object
      properties:
        subject:
          type: string
          example: http://localhost:8080/vivo/individual/n6870
        predicate:
          type: string
          example: http://www.w3.org/1999/02/22-rdf-syntax-ns#type
        object:
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
      xml:
        name: individualType

    vivo:
      required:
        - iri
      type: object
      properties:
        iri:
          type: string
          example: http://localhost:8080/vivo/individual/n6870
        label:
          type: string
          example: a label
        type:
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
      xml:
        name: vivo
    organization:
      required:
        - organizationType
        - names
      type: object
      properties:
        organizationType:
          type: string
          example: http://vivoweb.org/ontology/core#University
        names:
          type: array
          items:
            $ref: '#/components/schemas/linguisticLabel'
      xml:
        name: organization
    API-Response:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        apiMessage:
          type: string
        IRI-value:
          type: string
          example: http://localhost:8080/vivo/individual/n774
          description: The subject IRI of the created statement
        VIVO-Message:
          type: string
          example: <H1>200 SPARQL update accepted.</H1>
          description: The transaction message transmitted by the VIVO server
    resourceToResource:
      required:
        - subject-IRI
        - object-IRI
      type: object
      properties:
        subject-IRI:
          type: string
          example: http://localhost:8080/vivo/individual/n774
        object-IRI:
          type: string
          example: http://purl.org/uqam.ca/vocabulary/expertise#semanticweb
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
