openapi: 3.0.2
info:
  title: VIVO Proxy API
  description: Proxy API for VIVO Data Manipulation
  termsOfService: http://swagger.io/terms/
  contact:
    name: Michel Héon PhD
    email: vivo@uqam.ca
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about VIVO
  url: https://duraspace.org/vivo/
servers:
- url: http://localhost:9090/vivoproxy
security:
- basicAuth: []
tags:
- name: person
  description: Operations about a Person in VIVO
  externalDocs:
    description: Local VIVO Instance
    url: http://localhost:8080/vivo
- name: vivo
  description: Operations about generic individual in VIVO
- name: organization
  description: Operations about Organization in VIVO
paths:
  /concept:
    post:
      tags:
      - concept
      summary: Create a concept(skos:Concept) in VIVO
      description: This can only be done by the logged in person.
      operationId: createConcept
      requestBody:
        description: Created skos concept
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/concept'
            example: {
                        "IRI": "http://purl.org/uqam.ca/vocabulary/expertise#semanticweb",
                        "labels": [
                            {
                              "label": "semantic web",
                              "language": "en-US"
                            },
                           {
                            "label": "web sémantique",
                            "language": "fr-CA"
                          }
                        ]
                      }  
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /person:
    post:
      tags:
      - person
      summary: Create a person in VIVO
      description: This can only be done by the logged in person.
      operationId: createPerson
      requestBody:
        description: Created person object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        405:
          description: Invalid input
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /person/createWithList:
    post:
      tags:
      - person
      summary: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        description: List of user object
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/person'
              example: [
  {
    "personType": "http://vivoweb.org/ontology/core#FacultyMember",
    "firstName": "Peters",
    "lastName": "Jasper",
    "middleName": "I"
  },
  {
    "personType": "http://vivoweb.org/ontology/core#EmeritusProfessor",
    "firstName": "Ben",
    "lastName": "Jonson",
  }
]
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
        405:
          description: Validation exception
          content: {}
        default:
          description: successful operation
          content:
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/turtle:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
      x-codegen-request-body-name: body
  /person/addPositionFor:
    put:
      tags:
      - person
      summary: Add an organizational position for
      operationId: personAddOrganisationalPositionTo
      requestBody:
        description: Person that need to be in an organization
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/positionOfPerson'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /person/addHasResearchArea:
    put:
      tags:
      - person
      summary: Create 'has Research Area' for a person
      operationId: personHasAddResearchArea
      requestBody:
        description: Research Area of a person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceToResource'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /person/addResearchAreaOf:
    put:
      tags:
      - person
      summary: Create a 'Research Area of' a person
      operationId: personAddResearchAreaOf
      requestBody:
        description: Research Area of a person
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resourceToResource'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      x-codegen-request-body-name: body
  /vivo:
    get:
      tags:
      - vivo
      summary: Get an individual by IRI
      operationId: getindividualByIRI
      parameters:
      - name: IRI
        in: query
        description: Used to obtain information from a VIVO individual by the IRI
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            text/turtle:
              schema:
                type: string
            text/plain:
              schema:
                type: string
            application/ld+json:
              schema:
                type: string
            text/n3:
              schema:
                type: string
            text/owl-manchester:
              schema:
                type: string
            text/owl-functional:
              schema:
                type: string
            application/rdf+xml:
              schema:
                type: string
            application/owl+xml:
              schema:
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/vivo'
        400:
          description: Invalid personname supplied
          content: {}
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
        404:
          description: person not found
          content: {}
      security:
      - basicAuth: []
  /organization:
    post:
      tags:
      - organization
      summary: Create an organization in VIVO
      description: This can only be done by the logged in VIVO.
      operationId: createOrganization
      requestBody:
        description: Created organization object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
        required: true
      responses:
        200:
          description: OK (successfully authenticated)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/API-Response'
        401:
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
          content: {}
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
components:
  schemas:
    positionOfPerson:
      required:
        - personIRI
        - organisationIRI
        - organisationLabel
        - positionTitleLabel
        - positionTypeIRI
        - vivoOrganisationTypeIRI
      type: object
      properties:
        personIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n774
        organisationIRI:
          type: string
          example: http://localhost:8080/vivo/individual/n4762
        organisationLabel:
          type: string
          example: Harvard University
        positionTitleLabel:
          type: string
          example: Professor
        positionTypeIRI:
          type: string
          example: http://vivoweb.org/ontology/core#FacultyPosition
        vivoOrganisationTypeIRI:
          type: string
          example: http://vivoweb.org/ontology/core#University
        startField_year:
          type: string
        endField_year:
          type: string
      xml:
        name: personMemberOf
    concept:
      required:
        - IRI
        - labels
      type: object
      properties:
        IRI:
          type: string
          example: http://purl.org/uqam.ca/vocabulary/expertise#semanticweb
        labels:
          type: array
          items:
            $ref: '#/components/schemas/conceptLabel'
    conceptLabel:
      required:
        - label
        - language
      type: object
      properties:
        label:
          type: string
          example: semantic web
        language:
          type: string
          example: en-US
          description: Using the 'Language Tags and Locale Identifiers for the World Wide Web' defined at https://www.w3.org/TR/ltli/ for this field
    person:
      required:
        - personType
        - firstName
        - lastName
      type: object
      properties:
        personType:
          nullable: false
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
        firstName:
          nullable: false
          type: string
          example: Peters
        lastName:
          nullable: false
          type: string
          example: Jasper
        middleName:
          nullable: true
          type: string
          example: I
      xml:
        name: person
    vivo:
      required:
        - iri
      type: object
      properties:
        iri:
          type: string
          example: http://localhost:8080/vivo/individual/n6870
        label:
          type: string
          example: a label
        type:
          type: string
          example: http://vivoweb.org/ontology/core#FacultyMember
      xml:
        name: vivo
    organization:
      required:
        - organizationType
        - name
      type: object
      properties:
        organizationType:
          type: string
          example: http://vivoweb.org/ontology/core#University
        name:
          type: string
          example: Harvard University
      xml:
        name: organization
    API-Response:
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        apiMessage:
          type: string
        IRI-value:
          type: string
          example: http://localhost:8080/vivo/individual/n774
          description: The subject IRI of the created statement
        VIVO-Message:
          type: string
          example: <H1>200 SPARQL update accepted.</H1>
          description: The transaction message transmitted by the VIVO server
    resourceToResource:
      required:
        - subject-IRI
        - object-IRI
      type: object
      properties:
        subject-IRI:
          type: string
          example: http://localhost:8080/vivo/individual/n774
        object-IRI:
          type: string
          example: http://purl.org/uqam.ca/vocabulary/expertise#semanticweb
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content: {}
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
