swagger: "2.0"
info:
  description: "Proxy API for VIVO Data Manipulation"
  version: "1.0.0"
  title: "VIVO Proxy API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "vivo@uqam.ca"
    name: "Michel Héon PhD"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE2.0.html"
host: "localhost:9090"
basePath: "/vivoproxy"
tags:
- name: "person"
  description: "Operations about Person in VIVO"
  externalDocs:
    description: "Local VIVO Instance"
    url: "http://localhost:8080/vivo"
- name: "vivo"
  description: "Operations about generic individual in VIVO"
- name: "organization"
  description: "Operations about Organization in VIVO"
schemes:
- "http"
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
paths:
  /person:
    post:
      tags:
      - "person"
      summary: "Create a person in VIVO"
      description: "This can only be done by the logged in person."
      operationId: "createPerson"
      produces:
      - "application/json"
      - "text/plain"
      - "application/rdf+xml"
      - "text/n3"
      - "text/turtle"
      - "text/funtional"
      - "text/manchester"
      - "application/owl+xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Created person object"
        required: true
        schema:
          $ref: "#/definitions/person"
      security:
      - basicAuth: []
      responses:
        default:
          description: "successful operation"
        200:
          description: "OK (successfully authenticated)"
        "401":
           $ref: '#/responses/UnauthorizedError'
    put:
      tags:
      - "person"
      summary: "Create organizational position for"
      description: ""
      operationId: "createPositionFor"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "text/plain"
      - "application/rdf+xml"
      - "text/n3"
      - "text/turtle"
      - "text/funtional"
      - "text/manchester"
      - "application/owl+xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Person that need to be in an organization"
        required: true
        schema:
          $ref: "#/definitions/positionOfPerson"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
        "405":
          description: "Validation exception"
    
#  /person/{id}:
#    get:
#      tags:
#      - "person"
#      summary: "Get person by ID"
#      description: ""
#      operationId: "getPersonByID"
#      produces:
#      - "application/xml"
#      - "application/json"
#      parameters:
#      - name: "id"
#        in: "path"
#        description: "The name that needs to be fetched. Use person1 for testing. "
#        required: true
#        type: "string"
#      security:
#      - basicAuth: []
#      responses:
#        "200":
#          description: "successful operation"
#          schema:
#            $ref: "#/definitions/person"
#        "400":
#          description: "Invalid personname supplied"
#        "404":
#          description: "person not found"
#        "401":
#           $ref: '#/responses/UnauthorizedError'
#  /person/iri:
#    get:
#      tags:
#      - "person"
#      summary: "Get person by VIVO IRI"
#      description: ""
#      operationId: "getPersonByIRI"
#      produces:
#      - "application/xml"
#      - "application/json"
#      parameters:
#      - name: "iri"
#        in: query
#        description: "The iri that needs to be fetched. Use person1 for testing. "
#        required: true
#        type: "string"
#      security:
#      - basicAuth: []
#      responses:
#        "200":
#          description: "successful operation"
#          schema:
#            $ref: "#/definitions/person"
#        "400":
#          description: "Invalid personname supplied"
#        "404":
#          description: "person not found"
#        "401":
#           $ref: '#/responses/UnauthorizedError'
  /vivo:
    get:
      tags:
      - "vivo"
      summary: "Get an individual by IRI"
      description: ""
      operationId: "getindividualByIRI"
      produces:
      - "application/json"
      - "text/plain"
      - "application/rdf+xml"
      - "text/n3"
      - "text/turtle"
      - "text/funtional"
      - "text/manchester"
      - "application/owl+xml"
      parameters:
      - name: "IRI"
        in: "query"
        description: "Used to obtain information from a VIVO individual by the IRI"
        required: true
        type: "string"
      security:
      - basicAuth: []
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/vivo"
        "400":
          description: "Invalid personname supplied"
        "404":
          description: "person not found"
        "401":
           $ref: '#/responses/UnauthorizedError'
  /organization:
    post:
      tags:
      - "organization"
      summary: "Create an organization in VIVO"
      description: "This can only be done by the logged in VIVO."
      operationId: "createOrganization"
      produces:
      - "application/json"
      - "text/plain"
      - "application/rdf+xml"
      - "text/n3"
      - "text/turtle"
      - "text/funtional"
      - "text/manchester"
      - "application/owl+xml"
      parameters:
      - in: "body"
        name: "body"
        description: "Created organization object"
        required: true
        schema:
          $ref: "#/definitions/organization"
      security:
      - basicAuth: []
      responses:
        default:
          description: "successful operation"
        200:
          description: "OK (successfully authenticated)"
        "401":
           $ref: '#/responses/UnauthorizedError'
definitions:

  positionOfPerson:
    type: "object"
    properties:
      personIRI:
        type: "string"
        example: "http://localhost:8080/vivo/individual/n733"
      organisationIRI:
        type: "string"
        example: "http://localhost:8080/vivo/individual/n4762"
      organisationLabel:
        type: "string"
        example: "Harvard University"
      positionTitleLabel:
        type: "string"
        example: "Professor"
      positionTypeIRI:
        type: "string"
        example: "http://vivoweb.org/ontology/core#FacultyPosition"
      vivoOrganisationTypeIRI:
        type: "string"
        example: "http://vivoweb.org/ontology/core#University"
      startField_year:
        type: "string"
      endField_year:
        type: "string"
    xml:
      name: "personMemberOf"
  person:
    type: "object"
    properties:
 #     id:
 #       type: "string" 
 #       example: "n6870"
 #     iri:
 #       type: "string" 
 #       example: "http://localhost:8080/vivo/individual/n6870"
      personType:
        type: "string"
        example: "http://vivoweb.org/ontology/core#FacultyMember"
#      personName:
#        type: "string"
#        example: "Peters, Jasper I"
      firstName:
        type: "string"
        example: "Peters"
      lastName:
        type: "string"        
        example: "Jasper"
      middleName:
        type: "string"
        example: "I"
    xml:
      name: "person"
  vivo:
    type: "object"
    properties:
      iri:
        type: "string" 
        example: "http://localhost:8080/vivo/individual/n6870"
      label:
        type: "string"
        example: "a label"
      type:
        type: "string"
        example: "http://vivoweb.org/ontology/core#FacultyMember"
    xml:
      name: "vivo"
  organization:
    type: "object"
    properties:
#      id:
#        type: "string" 
#        example: "http://localhost:8080/vivo/individual/n1234"
      organizationType:
        type: "string"
        example: "http://vivoweb.org/ontology/core#University"
      Name:
        type: "string"
        example: "Université du Québec à Montréal"
    xml:
      name: "person"
responses:
  UnauthorizedError:
    description: "Authentication information is missing or invalid"
    headers:
      WWW_Authenticate:
        type: string
externalDocs:
    description: "Find out more about VIVO"
    url: "https://duraspace.org/vivo/"
